{"ast":null,"code":"var _jsxFileName = \"/Users/23miec/Projects/TechInWithElla/techinwithella/src/MainPages/Post.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport ReactMarkdown from \"react-markdown\";\nimport MuiAlert from \"@mui/material/Alert\";\nimport { BrowserRouter as Router, useParams } from \"react-router-dom\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport axios from \"axios\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Button } from \"@material-ui/core\";\nimport \"../MainPages/Post.scss\";\nimport \"../App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Post = () => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  let {\n    id\n  } = useParams();\n  const [post, setPost] = React.useState([]);\n  const [title, setTitle] = useState(\"\");\n  const [desc, setDesc] = useState(\"\");\n  const [postId, setPostId] = React.useState(\"\");\n  useEffect(() => {\n    const getPost = async () => {\n      const posts = await axios.get(\"/posts/\" + id);\n      setPost(posts.data);\n      setTitle(posts.data.title);\n      setDesc(posts.data.desc);\n      setPostId(posts.data._id);\n      const comments = await axios.get(`/comment/${posts.data._id}`);\n      console.log(comments);\n      setComments(comments.data);\n      setReplies(comments.data);\n      const replies = await axios.get(`/comment/replies/${posts.data._id}`);\n      console.log(replies);\n    };\n\n    getPost();\n  }, [id]);\n  const [openError, setOpenError] = React.useState(false);\n  const [error, setError] = React.useState(\"\");\n\n  const handleError = () => {\n    setOpenError(!openError);\n  };\n\n  const Alert = /*#__PURE__*/React.forwardRef(function Alert(props, ref) {\n    return /*#__PURE__*/_jsxDEV(MuiAlert, {\n      elevation: 6,\n      ref: ref,\n      variant: \"filled\",\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 16\n    }, this);\n  });\n  const PF = \"http://localhost:5000/images/\";\n  const [comments, setComments] = useState([]);\n  const [replies, setReplies] = useState([\"hey\", \"2\"]);\n  const [reply, setReply] = useState(false);\n  const [replyTo, setReplyTo] = useState(\"new\");\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [content, setContent] = useState(null);\n\n  const handleComment = async e => {\n    const newComment = {\n      name,\n      email,\n      postId,\n      content,\n      replyTo\n    };\n\n    try {\n      console.log(name);\n      console.log(email);\n      console.log(content);\n      await axios.post(\"/comment\", newComment);\n      console.log(\"bingo\");\n      window.location.replace(\"/post/\" + postId);\n    } catch (err) {}\n  };\n\n  function ReplyTernary(props) {\n    if (reply) {\n      console.log(props.commentId);\n      console.log(replyTo);\n\n      if (replyTo === props.commentId) {\n        return /*#__PURE__*/_jsxDEV(AddComment, {\n          reply: replyTo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 14\n        }, this);\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 18\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 16\n    }, this);\n  }\n\n  function AddComment(props) {\n    _s();\n\n    const [replyTo, setReplyTo] = useState(props.reply);\n    const [name, setName] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [content, setContent] = useState(null);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"body\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"addCommentBody\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"inputInfo\",\n          value: name,\n          onChange: e => setName(e.target.value),\n          type: \"text\",\n          placeholder: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"inputInfo\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          type: \"text\",\n          placeholder: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: content,\n          onChange: e => setContent(e.target.value),\n          className: \"textArea\",\n          placeholder: \"Join the discussion!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          const newComment = {\n            name,\n            email,\n            postId,\n            content,\n            replyTo\n          };\n\n          try {\n            console.log(name);\n            console.log(email);\n            console.log(content);\n            console.log(replyTo);\n            axios.post(\"/comment\", newComment);\n            console.log(\"bingo\");\n            window.location.replace(\"/post/\" + postId);\n          } catch (err) {}\n        },\n        className: classes.commentButton,\n        children: \"Add Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 16\n    }, this);\n  }\n\n  _s(AddComment, \"xvzBcVa9o8RPQnOXu8aQxKd9Tsw=\");\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"body\",\n    children: [/*#__PURE__*/_jsxDEV(Snackbar, {\n      open: openError,\n      autoHideDuration: 6000,\n      onClose: handleError,\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: handleError,\n        severity: \"success\",\n        sx: {\n          width: \"100%\"\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"textBody\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"title\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 11\n      }, this), \"  \", post.photo && /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"writeImg\",\n        src: PF + post.photo,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 63\n      }, this), /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n        children: desc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"commentSection\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Comments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this), comments.map(comments => {\n        if (comments.replyTo === \"new\") return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"commentBody\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"commentHeader\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"commentName\",\n                children: comments.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: new Date(comments.createdAt).toDateString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => {\n                  setReply(!reply);\n                  setReplyTo(comments._id);\n                },\n                className: \"commentName\",\n                children: \"Reply\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n              className: \"commentText\",\n              children: comments.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 18\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"arrow\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(ReplyTernary, {\n              commentId: comments._id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 5\n            }, this), replies.map(reply => {\n              if (reply.replyTo === comments._id) return /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"replyBody\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"commentHeader\",\n                      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                        className: \"commentName\",\n                        children: reply.name\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 244,\n                        columnNumber: 15\n                      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 245,\n                        columnNumber: 15\n                      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                        children: new Date(reply.createdAt).toDateString()\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 246,\n                        columnNumber: 15\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 243,\n                      columnNumber: 15\n                    }, this), /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n                      className: \"commentText\",\n                      children: reply.content\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 251,\n                      columnNumber: 15\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 242,\n                    columnNumber: 15\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 239,\n                  columnNumber: 15\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 20\n              }, this);\n              return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 16\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 13\n        }, this);\n        return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 19\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"AddComment\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Add Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"addCommentBody\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"inputInfo\",\n          value: name,\n          onChange: e => setName(e.target.value),\n          type: \"text\",\n          placeholder: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"inputInfo\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          type: \"text\",\n          placeholder: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: content,\n          onChange: e => setContent(e.target.value),\n          className: \"textArea\",\n          placeholder: \"Join the discussion!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleComment(),\n        className: \"commentButton\",\n        children: \"Add Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 177,\n    columnNumber: 9\n  }, this);\n};\n\n_s2(Post, \"qtO09vI6+df2tzVvPWwKHLHjKrA=\", false, function () {\n  return [useParams];\n});\n\n_c = Post;\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["/Users/23miec/Projects/TechInWithElla/techinwithella/src/MainPages/Post.js"],"names":["React","useState","useEffect","ReactMarkdown","MuiAlert","BrowserRouter","Router","useParams","Snackbar","axios","makeStyles","Button","Post","id","post","setPost","title","setTitle","desc","setDesc","postId","setPostId","getPost","posts","get","data","_id","comments","console","log","setComments","setReplies","replies","openError","setOpenError","error","setError","handleError","Alert","forwardRef","props","ref","PF","reply","setReply","replyTo","setReplyTo","name","setName","email","setEmail","content","setContent","handleComment","e","newComment","window","location","replace","err","ReplyTernary","commentId","AddComment","target","value","classes","commentButton","width","photo","map","Date","createdAt","toDateString"],"mappings":"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","sourcesContent":["\nimport React, { useState, useEffect } from 'react';\nimport ReactMarkdown from \"react-markdown\";\nimport MuiAlert from \"@mui/material/Alert\";\nimport { BrowserRouter as Router, useParams } from \"react-router-dom\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport axios from \"axios\"\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Button } from \"@material-ui/core\";\nimport \"../MainPages/Post.scss\"\nimport \"../App.css\"\n\nconst Post = (()=>{\n\n    \n  let { id } =\n  useParams();\n\n\n  const [post, setPost] = React.useState([]);\n  const [title, setTitle] = useState(\"\");\n  const [desc, setDesc] = useState(\"\");\n  const [postId, setPostId] = React.useState(\"\");\n  useEffect(() => {\n    const getPost = async () => {\n      const posts = await axios.get(\"/posts/\" + id);\n      setPost(posts.data);\n      setTitle(posts.data.title);\n      setDesc(posts.data.desc);\n      setPostId(posts.data._id)\n   \n        \n      const comments = await axios.get(`/comment/${posts.data._id}`);\n      console.log(comments)\n      setComments(comments.data)\n      setReplies(comments.data)\n      const replies = await axios.get(`/comment/replies/${posts.data._id}`);\n      console.log(replies)\n\n    \n     };\n\n    getPost();\n  }, [id]);\n\n\n    \n\n\n\n\n\n\n\n    const [openError, setOpenError] = React.useState(false);\n\n    const [error, setError] = React.useState(\"\");\n      const handleError = () => {\n        setOpenError(!openError);\n      };\n  \n    const Alert = React.forwardRef(function Alert(props, ref) {\n        return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\n      });\n\n      const PF = \"http://localhost:5000/images/\";\n   \n\n\n      const [comments, setComments] = useState([]);\n      const [replies, setReplies] = useState([\"hey\",\"2\"]);\n\n   \n      const [reply, setReply] = useState(false);\n      const [replyTo, setReplyTo] = useState(\"new\");\n      const [name, setName] = useState(\"\");\n      const [email, setEmail] = useState(\"\");\n      const [content, setContent] = useState(null);\n\n    \n  \n      const handleComment= async (e) => {\n      \n \n        const newComment = {\n          name,\n          email,\n          postId,\n          content,\n          replyTo,\n        };\n        \n        try {\n          console.log(name)\n          console.log(email)\n          console.log(content)\n          await axios.post(\"/comment\", newComment);\n          console.log(\"bingo\")\n          window.location.replace(\"/post/\" + postId);\n        } catch (err) {}\n      };\n\n\n     \nfunction ReplyTernary(props) {\n    \n        if (reply) {\n          console.log(props.commentId)\n          console.log(replyTo)\n          if(replyTo===props.commentId){\n            return (\n             <AddComment reply={replyTo} ></AddComment>\n            )\n          }\n          return <div/>\n        }\n        return <div/>\n       \n      }\n    \n      \n \n   \n  \n\n      function AddComment(props) {\n    \n        const [replyTo, setReplyTo] = useState(props.reply);\n\n        const [name, setName] = useState(\"\");\n        const [email, setEmail] = useState(\"\");\n        const [content, setContent] = useState(null);\n\n     return(   <div className=\"body\">\n    \n   \n    <div  className=\"addCommentBody\" >\n\n  <input className=\"inputInfo\"  value={name}\n  onChange={(e) => setName(e.target.value)} type=\"text\" placeholder=\"Name\"></input>\n      <input className=\"inputInfo\"  value={email}\n      onChange={(e) => setEmail(e.target.value)} type=\"text\"  placeholder=\"Email\"></input>\n   \n      <textarea value={content}\n      onChange={(e) => setContent(e.target.value)} className=\"textArea\"  placeholder= \"Join the discussion!\"/>\n   \n      </div>\n      <button   onClick={() => { \n\n\n\n        const newComment = {\n        name,\n        email,\n        postId,\n        content,\n        replyTo,\n      };\n      \n      try {\n        console.log(name)\n        console.log(email)\n        console.log(content)\n        console.log(replyTo)\n         axios.post(\"/comment\", newComment);\n        console.log(\"bingo\")\n        window.location.replace(\"/post/\" + postId);\n      \n      } catch (err) {}}} className={classes.commentButton}>Add Comment</button>\n  </div>)\n \n   }\n\n\n  \n    return(\n        <div className=\"body\">\n        <Snackbar\n        open={openError}\n        autoHideDuration={6000}\n        onClose={handleError}\n      >\n        <Alert\n          onClose={handleError}\n          severity=\"success\"\n          sx={{ width: \"100%\" }}\n        >\n\n         {error}\n        </Alert>\n      </Snackbar>\n    \n    \n\n        \n          <div className=\"textBody\" >\n          <h2 className=\"title\" >{title}</h2>  {post.photo && <img className=\"writeImg\" src={PF + post.photo} alt=\"\" />}\n        <ReactMarkdown>{desc}</ReactMarkdown>\n</div>\n       \n        \n\n \n\n        <div className=\"commentSection\" >\n        <h3>Comments</h3>\n        {comments.map(comments => {\n            if(comments.replyTo === \"new\")\n            return(\n            <div>\n \n                 <div className=\"commentBody\">\n            <div className=\"commentHeader\">\n            <p  className=\"commentName\">{comments.name}</p>\n            <br/>\n            <p>{new Date(comments.createdAt).toDateString()}</p>\n\n          <Button  onClick={() => {\n            setReply(!reply)\n        \n            setReplyTo(comments._id)\n       \n             \n             }}\n             className=\"commentName\">Reply</Button>\n            </div>\n       \n            <ReactMarkdown className=\"commentText\" >{comments.content}</ReactMarkdown>\n          \n          </div>\n      <div  >\n    <div className=\"arrow\"/>\n    <ReplyTernary commentId={comments._id}></ReplyTernary>\n\n          {replies.map(reply => {\n            if(reply.replyTo === comments._id)\n            return(<div >\n       \n              <div className=\"replyBody\">\n              \n   \n              <div >\n              <div className=\"commentHeader\">\n              <p  className=\"commentName\">{reply.name}</p>\n              <br/>\n              <p>{new Date(reply.createdAt).toDateString()}</p>\n  \n           \n              </div>\n         \n              <ReactMarkdown className=\"commentText\">{reply.content}</ReactMarkdown>\n            \n            </div>\n      \n       </div>\n  \n         </div>)\n\n         return<div/>\n            \n          }\n          \n        )}\n        \n        </div>\n          <div>\n      \n          </div>\n\n            </div>)\n            return<div/>\n        })}\n        \n        </div>\n          \n        \n          \n    \n     \n        <div className=\"AddComment\" >\n    \n      <h4 >Add Comment</h4>\n         \n          <div  className=\"addCommentBody\" >\n\n        <input className=\"inputInfo\"    value={name}\n        onChange={(e) => setName(e.target.value)} type=\"text\" placeholder=\"Name\"></input>\n            <input className=\"inputInfo\"  value={email}\n            onChange={(e) => setEmail(e.target.value)} type=\"text\"  placeholder=\"Email\"></input>\n         \n            <textarea value={content}\n            onChange={(e) => setContent(e.target.value)} className=\"textArea\"  placeholder= \"Join the discussion!\"/>\n         \n            </div>\n            <button   onClick={() => handleComment()} className=\"commentButton\">Add Comment</button>\n        </div>\n        </div>\n    )})\n\n    export default Post"]},"metadata":{},"sourceType":"module"}