{"ast":null,"code":"var _jsxFileName = \"/Users/23miec/Projects/techinwithella/src/MainPages/UploadPost.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Button from '@mui/material/Button';\nimport { getFirestore } from \"firebase/firestore\";\nimport Checkbox from '@mui/material/Checkbox';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport Container from '@mui/material/Container';\nimport TextField from '@mui/material/TextField';\nimport { getStorage, ref, uploadBytesResumable, getDownloadURL } from \"firebase/storage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UploadPost = () => {\n  _s();\n\n  const [title, setTitle] = React.useState(\"\");\n  const [date, setDate] = React.useState(\"\");\n  const [readTime, setReadTime] = React.useState(\"\");\n  const [author, setAuthor] = React.useState(\"\");\n  const [paragraphs, setParagraphs] = React.useState(\"\");\n  const [image1, setImage1] = React.useState(\"\");\n  const [image2, setImage2] = React.useState(\"\");\n  const [image1Alt, setImage1Alt] = React.useState(\"\");\n  const [image2Alt, setImage2Alt] = React.useState(\"\");\n  const allInputs = {\n    imgUrl: ''\n  };\n  const [imageAsFile, setImageAsFile] = useState('');\n  const [imageAsUrl, setImageAsUrl] = useState(allInputs);\n\n  const handleImageAsFile = e => {\n    const image = e.target.files[0];\n    setImageAsFile(imageFile => image);\n  };\n\n  const handleFireBaseUploadImage1 = e => {\n    const storage = getStorage();\n    const storageRef = ref(storage, `images/${image1Alt}.jpg`);\n    const uploadTask = uploadBytesResumable(storageRef, file); // Register three observers:\n    // 1. 'state_changed' observer, called any time the state changes\n    // 2. Error observer, called on failure\n    // 3. Completion observer, called on successful completion\n\n    uploadTask.on('state_changed', snapshot => {\n      // Observe state change events such as progress, pause, and resume\n      // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\n      const progress = snapshot.bytesTransferred / snapshot.totalBytes * 100;\n      console.log('Upload is ' + progress + '% done');\n\n      switch (snapshot.state) {\n        case 'paused':\n          console.log('Upload is paused');\n          break;\n\n        case 'running':\n          console.log('Upload is running');\n          break;\n      }\n    }, error => {// Handle unsuccessful uploads\n    }, () => {\n      // Handle successful uploads on complete\n      // For instance, get the download URL: https://firebasestorage.googleapis.com/...\n      getDownloadURL(uploadTask.snapshot.ref).then(downloadURL => {\n        console.log('File available at', downloadURL);\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Title:\", /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"outlined-basic\",\n          label: \"Title\",\n          variant: \"outlined\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Author:\", /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"outlined-basic\",\n          label: \"Author\",\n          variant: \"outlined\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Date:\", /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"outlined-basic\",\n          label: \"Date\",\n          variant: \"outlined\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Read Time:\", /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"outlined-basic\",\n          label: \"Read Time\",\n          variant: \"outlined\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 4\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Content:\", /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"outlined-basic\",\n          label: \"Content\",\n          variant: \"outlined\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 2\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Image 1\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Image 1 Alt:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          margin: '10px 0 0'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: handleImageAsFile\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            margin: '0 0 10px'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: imageAsUrl.imgUrl,\n            style: {\n              maxWidth: '300px'\n            },\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 5\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Image 2\", /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"outlined-basic\",\n          label: \"Outlined\",\n          variant: \"outlined\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Image 2 Alt:\", /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"outlined-basic\",\n          label: \"Outlined\",\n          variant: \"outlined\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          margin: '10px 0 0'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: handleImageAsFile\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            margin: '0 0 10px'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: imageAsUrl.imgUrl,\n            style: {\n              maxWidth: '300px'\n            },\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 5\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Submit\",\n        onClick: () => {\n          handleFireBaseUploadImage1();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UploadPost, \"B3tUWpTsVrJb6SHtcwXAKsEBaSs=\");\n\n_c = UploadPost;\nexport default UploadPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"UploadPost\");","map":{"version":3,"sources":["/Users/23miec/Projects/techinwithella/src/MainPages/UploadPost.js"],"names":["React","useState","Button","getFirestore","Checkbox","InputLabel","MenuItem","FormControl","Select","Container","TextField","getStorage","ref","uploadBytesResumable","getDownloadURL","UploadPost","title","setTitle","date","setDate","readTime","setReadTime","author","setAuthor","paragraphs","setParagraphs","image1","setImage1","image2","setImage2","image1Alt","setImage1Alt","image2Alt","setImage2Alt","allInputs","imgUrl","imageAsFile","setImageAsFile","imageAsUrl","setImageAsUrl","handleImageAsFile","e","image","target","files","imageFile","handleFireBaseUploadImage1","storage","storageRef","uploadTask","file","on","snapshot","progress","bytesTransferred","totalBytes","console","log","state","error","then","downloadURL","margin","maxWidth"],"mappings":";;;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AAEA,SAASC,YAAT,QAA6B,oBAA7B;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AAEA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAASC,UAAT,EAAqBC,GAArB,EAA0BC,oBAA1B,EAAgDC,cAAhD,QAAsE,kBAAtE;;;AAEA,MAAMC,UAAU,GAAI,MAAI;AAAA;;AACtB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBjB,KAAK,CAACC,QAAN,CAAe,EAAf,CAA1B;AACA,QAAM,CAACiB,IAAD,EAAOC,OAAP,IAAkBnB,KAAK,CAACC,QAAN,CAAe,EAAf,CAAxB;AACA,QAAM,CAACmB,QAAD,EAAWC,WAAX,IAA0BrB,KAAK,CAACC,QAAN,CAAe,EAAf,CAAhC;AACA,QAAM,CAACqB,MAAD,EAASC,SAAT,IAAsBvB,KAAK,CAACC,QAAN,CAAe,EAAf,CAA5B;AACA,QAAM,CAACuB,UAAD,EAAaC,aAAb,IAA8BzB,KAAK,CAACC,QAAN,CAAe,EAAf,CAApC;AACA,QAAM,CAACyB,MAAD,EAASC,SAAT,IAAsB3B,KAAK,CAACC,QAAN,CAAe,EAAf,CAA5B;AACA,QAAM,CAAC2B,MAAD,EAASC,SAAT,IAAsB7B,KAAK,CAACC,QAAN,CAAe,EAAf,CAA5B;AACA,QAAM,CAAC6B,SAAD,EAAYC,YAAZ,IAA4B/B,KAAK,CAACC,QAAN,CAAe,EAAf,CAAlC;AACA,QAAM,CAAC+B,SAAD,EAAYC,YAAZ,IAA4BjC,KAAK,CAACC,QAAN,CAAe,EAAf,CAAlC;AAGA,QAAMiC,SAAS,GAAG;AAAEC,IAAAA,MAAM,EAAE;AAAV,GAAlB;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCpC,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACqC,UAAD,EAAaC,aAAb,IAA8BtC,QAAQ,CAACiC,SAAD,CAA5C;;AACA,QAAMM,iBAAiB,GAAIC,CAAD,IAAO;AAC/B,UAAMC,KAAK,GAAGD,CAAC,CAACE,MAAF,CAASC,KAAT,CAAe,CAAf,CAAd;AACAP,IAAAA,cAAc,CAAEQ,SAAD,IAAeH,KAAhB,CAAd;AACH,GAHC;;AAKF,QAAMI,0BAA0B,GAAIL,CAAD,IAAO;AAExC,UAAMM,OAAO,GAAGpC,UAAU,EAA1B;AACA,UAAMqC,UAAU,GAAGpC,GAAG,CAACmC,OAAD,EAAW,UAASjB,SAAU,MAA9B,CAAtB;AAEA,UAAMmB,UAAU,GAAGpC,oBAAoB,CAACmC,UAAD,EAAaE,IAAb,CAAvC,CALwC,CAOxC;AACA;AACA;AACA;;AACAD,IAAAA,UAAU,CAACE,EAAX,CAAc,eAAd,EACGC,QAAD,IAAc;AACZ;AACA;AACA,YAAMC,QAAQ,GAAID,QAAQ,CAACE,gBAAT,GAA4BF,QAAQ,CAACG,UAAtC,GAAoD,GAArE;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAeJ,QAAf,GAA0B,QAAtC;;AACA,cAAQD,QAAQ,CAACM,KAAjB;AACE,aAAK,QAAL;AACEF,UAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACA;;AACF,aAAK,SAAL;AACED,UAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACA;AANJ;AASD,KAfH,EAgBGE,KAAD,IAAW,CACT;AACD,KAlBH,EAmBE,MAAM;AACJ;AACA;AACA7C,MAAAA,cAAc,CAACmC,UAAU,CAACG,QAAX,CAAoBxC,GAArB,CAAd,CAAwCgD,IAAxC,CAA8CC,WAAD,IAAiB;AAC5DL,QAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCI,WAAjC;AACD,OAFD;AAGD,KAzBH;AA2BD,GAtCD;;AAuCI,sBACI;AAAA,2BAGA;AAAA,8BACA;AAAA,0CAEC,QAAC,SAAD;AAAW,UAAA,EAAE,EAAC,gBAAd;AAA+B,UAAA,KAAK,EAAC,OAArC;AAA6C,UAAA,OAAO,EAAC;AAArD;AAAA;AAAA;AAAA;AAAA,gBAFD;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAOA;AAAA,2CAEA,QAAC,SAAD;AAAW,UAAA,EAAE,EAAC,gBAAd;AAA+B,UAAA,KAAK,EAAC,QAArC;AAA8C,UAAA,OAAO,EAAC;AAAtD;AAAA;AAAA;AAAA;AAAA,gBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPA,eAcF;AAAA,yCAEA,QAAC,SAAD;AAAW,UAAA,EAAE,EAAC,gBAAd;AAA+B,UAAA,KAAK,EAAC,MAArC;AAA4C,UAAA,OAAO,EAAC;AAApD;AAAA;AAAA;AAAA;AAAA,gBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,cAdE,eAmBJ;AAAA,8CAED,QAAC,SAAD;AAAW,UAAA,EAAE,EAAC,gBAAd;AAA+B,UAAA,KAAK,EAAC,WAArC;AAAiD,UAAA,OAAO,EAAC;AAAzD;AAAA;AAAA;AAAA;AAAA,gBAFC;AAAA;AAAA;AAAA;AAAA;AAAA,cAnBI,eAwBN;AAAA,4CAED,QAAC,SAAD;AAAW,UAAA,EAAE,EAAC,gBAAd;AAA+B,UAAA,KAAK,EAAC,SAArC;AAA+C,UAAA,OAAO,EAAC;AAAvD;AAAA;AAAA;AAAA;AAAA,gBAFC;AAAA;AAAA;AAAA;AAAA;AAAA,cAxBM,eA+BR;AAAA,2CAEA;AAAO,UAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,gBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,cA/BQ,eAoCR;AAAA,gDAEA;AAAO,UAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,gBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,cApCQ,eAwCR;AAAK,QAAA,KAAK,EAAE;AAAEC,UAAAA,MAAM,EAAE;AAAV,SAAZ;AAAA,gCACA;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,QAAQ,EAAEtB;AAA7B;AAAA;AAAA;AAAA;AAAA,gBADA,eAEA;AAEI,UAAA,KAAK,EAAE;AAAEsB,YAAAA,MAAM,EAAE;AAAV,WAFX;AAAA,iCAII;AACI,YAAA,GAAG,EAAExB,UAAU,CAACH,MADpB;AAEI,YAAA,KAAK,EAAE;AAAE4B,cAAAA,QAAQ,EAAE;AAAZ,aAFX;AAGI,YAAA,GAAG,EAAC;AAHR;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,gBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,cAxCQ,eAuDR;AAAA,2CAEA,QAAC,SAAD;AAAW,UAAA,EAAE,EAAC,gBAAd;AAA+B,UAAA,KAAK,EAAC,UAArC;AAAgD,UAAA,OAAO,EAAC;AAAxD;AAAA;AAAA;AAAA;AAAA,gBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,cAvDQ,eA4DR;AAAA,gDAEA,QAAC,SAAD;AAAW,UAAA,EAAE,EAAC,gBAAd;AAA+B,UAAA,KAAK,EAAC,UAArC;AAAgD,UAAA,OAAO,EAAC;AAAxD;AAAA;AAAA;AAAA;AAAA,gBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,cA5DQ,eAgER;AAAK,QAAA,KAAK,EAAE;AAAED,UAAAA,MAAM,EAAE;AAAV,SAAZ;AAAA,gCACA;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,QAAQ,EAAEtB;AAA7B;AAAA;AAAA;AAAA;AAAA,gBADA,eAEA;AAEI,UAAA,KAAK,EAAE;AAAEsB,YAAAA,MAAM,EAAE;AAAV,WAFX;AAAA,iCAII;AACI,YAAA,GAAG,EAAExB,UAAU,CAACH,MADpB;AAEI,YAAA,KAAK,EAAE;AAAE4B,cAAAA,QAAQ,EAAE;AAAZ,aAFX;AAGI,YAAA,GAAG,EAAC;AAHR;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,gBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,cAhEQ,eAkFJ;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAC,QAA3B;AACA,QAAA,OAAO,EAAE,MAAM;AACbjB,UAAAA,0BAA0B;AAC3B;AAHD;AAAA;AAAA;AAAA;AAAA,cAlFI;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA,UADJ;AA6FE,CAxJN;;GAAM/B,U;;KAAAA,U;AA0JF,eAAeA,UAAf","sourcesContent":["\nimport React, { useState } from 'react'\nimport Button from '@mui/material/Button';\n\nimport { getFirestore } from \"firebase/firestore\"\nimport Checkbox from '@mui/material/Checkbox';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport Container from '@mui/material/Container';\n\nimport TextField from '@mui/material/TextField';\nimport { getStorage, ref, uploadBytesResumable, getDownloadURL } from \"firebase/storage\";\n\nconst UploadPost = (()=>{\n  const [title, setTitle] = React.useState(\"\");\n  const [date, setDate] = React.useState(\"\");\n  const [readTime, setReadTime] = React.useState(\"\");\n  const [author, setAuthor] = React.useState(\"\");\n  const [paragraphs, setParagraphs] = React.useState(\"\");\n  const [image1, setImage1] = React.useState(\"\");\n  const [image2, setImage2] = React.useState(\"\");\n  const [image1Alt, setImage1Alt] = React.useState(\"\");\n  const [image2Alt, setImage2Alt] = React.useState(\"\");\n\n\n  const allInputs = { imgUrl: '' }\n  const [imageAsFile, setImageAsFile] = useState('')\n  const [imageAsUrl, setImageAsUrl] = useState(allInputs)\n  const handleImageAsFile = (e) => {\n    const image = e.target.files[0]\n    setImageAsFile((imageFile) => image)\n}\n\nconst handleFireBaseUploadImage1 = (e) => {\n  \n  const storage = getStorage();\n  const storageRef = ref(storage, `images/${image1Alt}.jpg`);\n  \n  const uploadTask = uploadBytesResumable(storageRef, file);\n  \n  // Register three observers:\n  // 1. 'state_changed' observer, called any time the state changes\n  // 2. Error observer, called on failure\n  // 3. Completion observer, called on successful completion\n  uploadTask.on('state_changed', \n    (snapshot) => {\n      // Observe state change events such as progress, pause, and resume\n      // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\n      const progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n      console.log('Upload is ' + progress + '% done');\n      switch (snapshot.state) {\n        case 'paused':\n          console.log('Upload is paused');\n          break;\n        case 'running':\n          console.log('Upload is running');\n          break;\n          \n      }\n    }, \n    (error) => {\n      // Handle unsuccessful uploads\n    }, \n    () => {\n      // Handle successful uploads on complete\n      // For instance, get the download URL: https://firebasestorage.googleapis.com/...\n      getDownloadURL(uploadTask.snapshot.ref).then((downloadURL) => {\n        console.log('File available at', downloadURL);\n      });\n    }\n  );\n}\n    return(\n        <div >\n\n\n        <form>\n        <label>\n          Title:\n         <TextField id=\"outlined-basic\" label=\"Title\" variant=\"outlined\" />\n        </label>\n\n\n        <label>\n        Author:\n        <TextField id=\"outlined-basic\" label=\"Author\" variant=\"outlined\" />\n      </label>\n     \n\n\n      <label>\n      Date:\n      <TextField id=\"outlined-basic\" label=\"Date\" variant=\"outlined\" />\n    </label>\n\n    <label>\n    Read Time:\n   <TextField id=\"outlined-basic\" label=\"Read Time\" variant=\"outlined\" />\n  </label>\n\n  <label>\n  Content:\n <TextField id=\"outlined-basic\" label=\"Content\" variant=\"outlined\" />\n</label>\n\n\n\n<label>\nImage 1\n<input type=\"text\"   />\n</label>\n\n<label>\nImage 1 Alt:\n<input type=\"text\"   />\n</label>\n<div style={{ margin: '10px 0 0' }}>\n<input type=\"file\" onChange={handleImageAsFile} />\n<div\n\n    style={{ margin: '0 0 10px' }}\n>\n    <img\n        src={imageAsUrl.imgUrl}\n        style={{ maxWidth: '300px' }}\n        alt=\"\"\n    />\n</div>\n</div>\n\n\n<label>\nImage 2\n<TextField id=\"outlined-basic\" label=\"Outlined\" variant=\"outlined\" />\n</label>\n\n<label>\nImage 2 Alt:\n<TextField id=\"outlined-basic\" label=\"Outlined\" variant=\"outlined\" />\n</label>\n<div style={{ margin: '10px 0 0' }}>\n<input type=\"file\" onChange={handleImageAsFile} />\n<div\n\n    style={{ margin: '0 0 10px' }}\n>\n    <img\n        src={imageAsUrl.imgUrl}\n        style={{ maxWidth: '300px' }}\n        alt=\"\"\n    />\n</div>\n</div>\n\n\n\n\n\n    <input type=\"submit\" value=\"Submit\"   \n    onClick={() => {\n      handleFireBaseUploadImage1()\n    }} />\n\n      </form>\n        </div>\n    )})\n\n    export default UploadPost"]},"metadata":{},"sourceType":"module"}