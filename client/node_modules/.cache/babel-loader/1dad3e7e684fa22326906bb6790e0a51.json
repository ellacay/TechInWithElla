{"ast":null,"code":"var _jsxFileName = \"/Users/23miec/Projects/TechInWithElla/techinwithella/src/MainPages/Post.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport ReactMarkdown from \"react-markdown\";\nimport MuiAlert from \"@mui/material/Alert\";\nimport { BrowserRouter as Router, useParams } from \"react-router-dom\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport { set } from \"@firebase/database\";\nimport FavoriteIcon from '@mui/icons-material/Favorite';\nimport FavoriteBorderIcon from '@mui/icons-material/FavoriteBorder';\nimport axios from \"axios\";\nimport AddIcon from '@mui/icons-material/Add';\nimport IconButton from '@mui/material/IconButton';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Button } from \"@material-ui/core\";\nimport Divider from '@mui/material/Divider';\nimport ArrowForwardIcon from '@mui/icons-material/ArrowForward';\nimport { styled } from '@mui/material/styles';\nimport MuiGrid from '@mui/material/Grid';\nimport \"../AuthorPages/Write/Write.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Grid = styled(MuiGrid)(_ref => {\n  let {\n    theme\n  } = _ref;\n  return {\n    width: '100%',\n    ...theme.typography.body2,\n    '& [role=\"separator\"]': {\n      margin: theme.spacing(0, 2)\n    }\n  };\n});\n\nconst Post = () => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  let {\n    id\n  } = useParams();\n  const [post, setPost] = React.useState([]);\n  const [title, setTitle] = useState(\"\");\n  const [desc, setDesc] = useState(\"\");\n  const [postId, setPostId] = React.useState(\"\");\n  useEffect(() => {\n    const getPost = async () => {\n      const posts = await axios.get(\"/posts/\" + id);\n      setPost(posts.data);\n      setTitle(posts.data.title);\n      setDesc(posts.data.desc);\n      setPostId(posts.data._id);\n      const comments = await axios.get(`/comment/${posts.data._id}`);\n      console.log(comments);\n      setComments(comments.data);\n      setReplies(comments.data);\n      const replies = await axios.get(`/comment/replies/${posts.data._id}`);\n      console.log(replies);\n    };\n\n    getPost();\n  }, [id]);\n  const [openError, setOpenError] = React.useState(false);\n  const [error, setError] = React.useState(\"\");\n\n  const handleError = () => {\n    setOpenError(!openError);\n  };\n\n  const Alert = /*#__PURE__*/React.forwardRef(function Alert(props, ref) {\n    return /*#__PURE__*/_jsxDEV(MuiAlert, {\n      elevation: 6,\n      ref: ref,\n      variant: \"filled\",\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 16\n    }, this);\n  });\n  const PF = \"http://localhost:5000/images/\";\n  const useStyles = makeStyles(theme => ({\n    writeImg: {\n      width: \"100%\",\n      height: \"auto\",\n      borderRadius: \"10px\",\n      objectFit: \"fill\",\n      marginTop: \"2%\",\n      cssFloat: \"left\"\n    },\n    body: {\n      padding: \"10vw\"\n    },\n    textBody: {\n      display: \"flex\",\n      alignItems: \"center\",\n      flexDirection: \"column\"\n    },\n    markdown: {\n      width: \"60vw\",\n      margin: '1px'\n    },\n    commentHeader: {\n      display: 'flex',\n      flexDirection: \"row\",\n      backgroundColor: \"#d6d6d4\",\n      width: \"100%\"\n    },\n    commentBody: {\n      borderStyle: \"solid\",\n      borderColor: \"#d6d6d4\",\n      borderRadius: \"15px\"\n    },\n    replyBody: {\n      marginLeft: '5%',\n      marginTop: \"10px\",\n      marginBottom: \"10px\",\n      borderStyle: \"solid\",\n      borderColor: \"#d6d6d4\",\n      borderRadius: \"15px\",\n      width: \"95%\"\n    },\n    line: {\n      borderLeft: \"solid\"\n    },\n    addBody: {\n      margin: '1px',\n      width: \"100%\"\n    },\n    addCommentBody: {\n      flexDirection: \"row\",\n      margin: '1px'\n    },\n    addCommentButton: {\n      backgroundColor: \"#2195ed\"\n    },\n    textArea: {\n      margin: '1px',\n      width: \"100%\"\n    },\n    commentSection: {\n      display: 'flex',\n      flexDirection: \"column\",\n      width: \"100%\"\n    },\n    commentText: {\n      margin: \"1%\"\n    },\n    commentName: {\n      color: \"#2195ed\",\n      marginLeft: \"1%\",\n      marginRight: \"2%\"\n    },\n    commentWrite: {\n      width: \"50%\"\n    },\n    arrow: {\n      borderLeft: \"Solid\",\n      borderWidth: \"1px\"\n    }\n  }));\n  const [comments, setComments] = useState([]);\n  const [replies, setReplies] = useState([\"hey\", \"2\"]);\n  const [reply, setReply] = useState(false);\n  const [replyTo, setReplyTo] = useState(\"new\");\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [content, setContent] = useState(null);\n\n  const handleComment = async e => {\n    const newComment = {\n      name,\n      email,\n      postId,\n      content,\n      replyTo\n    };\n\n    try {\n      console.log(name);\n      console.log(email);\n      console.log(content);\n      await axios.post(\"/comment\", newComment);\n      console.log(\"bingo\");\n      window.location.replace(\"/post/\" + postId);\n    } catch (err) {}\n  };\n\n  function ReplyTernary(props) {\n    if (reply) {\n      console.log(props.commentId);\n      console.log(replyTo);\n\n      if (replyTo === props.commentId) {\n        return /*#__PURE__*/_jsxDEV(AddComment, {\n          reply: replyTo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 14\n        }, this);\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 18\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 16\n    }, this);\n  }\n\n  function AddComment(props) {\n    _s();\n\n    const [replyTo, setReplyTo] = useState(props.reply);\n    const [name, setName] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [content, setContent] = useState(null);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.body,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.addCommentBody,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: classes.inputInfo,\n          value: name,\n          onChange: e => setName(e.target.value),\n          type: \"text\",\n          placeholder: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: classes.inputInfo,\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          type: \"text\",\n          placeholder: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: content,\n          onChange: e => setContent(e.target.value),\n          className: classes.textArea,\n          placeholder: \"Join the discussion!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          const newComment = {\n            name,\n            email,\n            postId,\n            content,\n            replyTo\n          };\n\n          try {\n            console.log(name);\n            console.log(email);\n            console.log(content);\n            console.log(replyTo);\n            axios.post(\"/comment\", newComment);\n            console.log(\"bingo\");\n            window.location.replace(\"/post/\" + postId);\n          } catch (err) {}\n        },\n        className: classes.commentButton,\n        children: \"Add Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 16\n    }, this);\n  }\n\n  _s(AddComment, \"xvzBcVa9o8RPQnOXu8aQxKd9Tsw=\");\n\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.body,\n    children: [/*#__PURE__*/_jsxDEV(Snackbar, {\n      open: openError,\n      autoHideDuration: 6000,\n      onClose: handleError,\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: handleError,\n        severity: \"success\",\n        sx: {\n          width: \"100%\"\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.body,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.textBody,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 13\n        }, this), \"  \", post.photo && /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"writeImg\",\n          src: PF + post.photo,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 47\n        }, this), /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n          children: desc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.commentSection,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.body,\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Comments\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 9\n          }, this), comments.map(comments => {\n            if (comments.replyTo === \"new\") return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.commentBody,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: classes.commentHeader,\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    className: classes.commentName,\n                    children: comments.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 367,\n                    columnNumber: 13\n                  }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 368,\n                    columnNumber: 13\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: new Date(comments.createdAt).toDateString()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 369,\n                    columnNumber: 13\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    onClick: () => {\n                      setReply(!reply);\n                      setReplyTo(comments._id);\n                    },\n                    className: classes.commentName,\n                    children: \"Reply\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 371,\n                    columnNumber: 11\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 366,\n                  columnNumber: 13\n                }, this), /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n                  className: classes.commentText,\n                  children: comments.content\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 381,\n                  columnNumber: 13\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 365,\n                columnNumber: 18\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: classes.arrow\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 385,\n                  columnNumber: 5\n                }, this), /*#__PURE__*/_jsxDEV(ReplyTernary, {\n                  commentId: comments._id\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 386,\n                  columnNumber: 5\n                }, this), replies.map(reply => {\n                  if (reply.replyTo === comments._id) return /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: classes.replyBody,\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          className: classes.commentHeader,\n                          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                            className: classes.commentName,\n                            children: reply.name\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 397,\n                            columnNumber: 15\n                          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 398,\n                            columnNumber: 15\n                          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                            children: new Date(reply.createdAt).toDateString()\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 399,\n                            columnNumber: 15\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 396,\n                          columnNumber: 15\n                        }, this), /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n                          className: classes.commentText,\n                          children: reply.content\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 404,\n                          columnNumber: 15\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 395,\n                        columnNumber: 15\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 392,\n                      columnNumber: 15\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 390,\n                    columnNumber: 20\n                  }, this);\n                  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 412,\n                    columnNumber: 16\n                  }, this);\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 384,\n                columnNumber: 7\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 419,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 363,\n              columnNumber: 13\n            }, this);\n            return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 424,\n              columnNumber: 19\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.body,\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Add Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.addCommentBody,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: classes.inputInfo,\n          value: name,\n          onChange: e => setName(e.target.value),\n          type: \"text\",\n          placeholder: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: classes.inputInfo,\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          type: \"text\",\n          placeholder: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: content,\n          onChange: e => setContent(e.target.value),\n          className: classes.textArea,\n          placeholder: \"Join the discussion!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleComment(),\n        className: classes.commentButton,\n        children: \"Add Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 433,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 327,\n    columnNumber: 9\n  }, this);\n};\n\n_s2(Post, \"D9C4XMWsKiOD2MqS3j9vJ+89f4w=\", true, function () {\n  return [useParams];\n});\n\n_c = Post;\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["/Users/23miec/Projects/TechInWithElla/techinwithella/src/MainPages/Post.js"],"names":["React","useState","useEffect","ReactMarkdown","MuiAlert","BrowserRouter","Router","useParams","Snackbar","set","FavoriteIcon","FavoriteBorderIcon","axios","AddIcon","IconButton","makeStyles","Button","Divider","ArrowForwardIcon","styled","MuiGrid","Grid","theme","width","typography","body2","margin","spacing","Post","id","post","setPost","title","setTitle","desc","setDesc","postId","setPostId","getPost","posts","get","data","_id","comments","console","log","setComments","setReplies","replies","openError","setOpenError","error","setError","handleError","Alert","forwardRef","props","ref","PF","useStyles","writeImg","height","borderRadius","objectFit","marginTop","cssFloat","body","padding","textBody","display","alignItems","flexDirection","markdown","commentHeader","backgroundColor","commentBody","borderStyle","borderColor","replyBody","marginLeft","marginBottom","line","borderLeft","addBody","addCommentBody","addCommentButton","textArea","commentSection","commentText","commentName","color","marginRight","commentWrite","arrow","borderWidth","reply","setReply","replyTo","setReplyTo","name","setName","email","setEmail","content","setContent","handleComment","e","newComment","window","location","replace","err","ReplyTernary","commentId","AddComment","classes","inputInfo","target","value","commentButton","photo","map","Date","createdAt","toDateString"],"mappings":"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","sourcesContent":["\nimport React, { useState, useEffect } from 'react';\nimport ReactMarkdown from \"react-markdown\";\nimport MuiAlert from \"@mui/material/Alert\";\nimport { BrowserRouter as Router, useParams } from \"react-router-dom\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport { set } from \"@firebase/database\";\nimport FavoriteIcon from '@mui/icons-material/Favorite';\nimport FavoriteBorderIcon from '@mui/icons-material/FavoriteBorder';\nimport axios from \"axios\"\nimport AddIcon from '@mui/icons-material/Add';\nimport IconButton from '@mui/material/IconButton'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Button } from \"@material-ui/core\";\nimport Divider from '@mui/material/Divider';\nimport ArrowForwardIcon from '@mui/icons-material/ArrowForward';\nimport { styled } from '@mui/material/styles';\nimport MuiGrid from '@mui/material/Grid';\n\nimport \"../AuthorPages/Write/Write.css\"\nconst Grid = styled(MuiGrid)(({ theme }) => ({\n  width: '100%',\n  ...theme.typography.body2,\n  '& [role=\"separator\"]': {\n    margin: theme.spacing(0, 2),\n  },\n}));\n\nconst Post = (()=>{\n\n    \n  let { id } =\n  useParams();\n\n\n  const [post, setPost] = React.useState([]);\n  const [title, setTitle] = useState(\"\");\n  const [desc, setDesc] = useState(\"\");\n  const [postId, setPostId] = React.useState(\"\");\n  useEffect(() => {\n    const getPost = async () => {\n      const posts = await axios.get(\"/posts/\" + id);\n      setPost(posts.data);\n      setTitle(posts.data.title);\n      setDesc(posts.data.desc);\n      setPostId(posts.data._id)\n   \n        \n      const comments = await axios.get(`/comment/${posts.data._id}`);\n      console.log(comments)\n      setComments(comments.data)\n      setReplies(comments.data)\n      const replies = await axios.get(`/comment/replies/${posts.data._id}`);\n      console.log(replies)\n\n    \n     };\n\n    getPost();\n  }, [id]);\n\n\n    \n\n\n\n\n\n\n\n    const [openError, setOpenError] = React.useState(false);\n\n    const [error, setError] = React.useState(\"\");\n      const handleError = () => {\n        setOpenError(!openError);\n      };\n  \n    const Alert = React.forwardRef(function Alert(props, ref) {\n        return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\n      });\n\n      const PF = \"http://localhost:5000/images/\";\n   \n\n      const useStyles = makeStyles((theme) => ({\n\n        writeImg:{\n          \n    width:\"100%\",\n          height: \"auto\",         \n           borderRadius: \"10px\",\n          objectFit: \"fill\",\n          marginTop:\"2%\",\n          cssFloat:\"left\"\n        },\n        body:{\n          \n \n         padding: \"10vw\",\n      \n      \n        },\n        textBody: {\n        \n          \n              display: \"flex\",\n          alignItems:\"center\",\n          flexDirection: \"column\",\n       \n      \n      \n        },\n        markdown:{\n          \n          width: \"60vw\",\n          margin:'1px',\n        \n      \n        },\n        commentHeader:{\n         display:'flex',\n         flexDirection:\"row\", \n     backgroundColor:\"#d6d6d4\",\n     width:\"100%\",\n        \n      \n        },\n        commentBody:{\n          \n        \n          borderStyle:\"solid\",\n          borderColor:\"#d6d6d4\",\n          borderRadius:\"15px\",\n        \n\n        },\n        replyBody:{\n          \n          \n          marginLeft:'5%',\n          marginTop:\"10px\",   marginBottom:\"10px\",\n          borderStyle:\"solid\",\n          borderColor:\"#d6d6d4\",\n          borderRadius:\"15px\",\n          width:\"95%\",\n      \n\n        },\n\n        line:{\n          \n       borderLeft:\"solid\",\n\n\n        },\n\n        addBody:{\n          \n          \n          margin:'1px',\n      \n      \n          width:\"100%\",\n      \n      \n\n        },\n\n        addCommentBody:{\n          \n          flexDirection:\"row\", \n          margin:'1px',\n          \n \n      \n\n        },\n    addCommentButton:{\nbackgroundColor:\"#2195ed\"\n    },\n\n        textArea:{\n          \n          \n          margin:'1px',\n        \n      \n          width:\"100%\",\n      \n        },\n        commentSection:{\n          \n          display:'flex',\n          flexDirection:\"column\", \n          width:\"100%\",\n      \n        },\n        commentText:{\n          \n          margin:\"1%\",\n      \n        },commentName:{\n          color:\"#2195ed\",\n          marginLeft: \"1%\",\n          marginRight:\"2%\",\n        },  commentWrite:{\n          \n         width:\"50%\",\n      \n        },  arrow:{\n         borderLeft:\"Solid\",\n         borderWidth:\"1px\",\n         }\n        \n\n        \n        \n      }))\n\n      const [comments, setComments] = useState([]);\n      const [replies, setReplies] = useState([\"hey\",\"2\"]);\n\n   \n      const [reply, setReply] = useState(false);\n      const [replyTo, setReplyTo] = useState(\"new\");\n      const [name, setName] = useState(\"\");\n      const [email, setEmail] = useState(\"\");\n      const [content, setContent] = useState(null);\n\n    \n  \n      const handleComment= async (e) => {\n      \n \n        const newComment = {\n          name,\n          email,\n          postId,\n          content,\n          replyTo,\n        };\n        \n        try {\n          console.log(name)\n          console.log(email)\n          console.log(content)\n          await axios.post(\"/comment\", newComment);\n          console.log(\"bingo\")\n          window.location.replace(\"/post/\" + postId);\n        } catch (err) {}\n      };\n\n\n     \nfunction ReplyTernary(props) {\n    \n        if (reply) {\n          console.log(props.commentId)\n          console.log(replyTo)\n          if(replyTo===props.commentId){\n            return (\n             <AddComment reply={replyTo} ></AddComment>\n            )\n          }\n          return <div/>\n        }\n        return <div/>\n       \n      }\n    \n      \n \n   \n  \n\n      function AddComment(props) {\n    \n        const [replyTo, setReplyTo] = useState(props.reply);\n\n        const [name, setName] = useState(\"\");\n        const [email, setEmail] = useState(\"\");\n        const [content, setContent] = useState(null);\n\n     return(   <div className={classes.body} >\n    \n   \n    <div  className={classes.addCommentBody} >\n\n  <input className={classes.inputInfo}   value={name}\n  onChange={(e) => setName(e.target.value)} type=\"text\" placeholder=\"Name\"></input>\n      <input className={classes.inputInfo}   value={email}\n      onChange={(e) => setEmail(e.target.value)} type=\"text\"  placeholder=\"Email\"></input>\n   \n      <textarea value={content}\n      onChange={(e) => setContent(e.target.value)} className={classes.textArea}  placeholder= \"Join the discussion!\"/>\n   \n      </div>\n      <button   onClick={() => { \n\n\n\n        const newComment = {\n        name,\n        email,\n        postId,\n        content,\n        replyTo,\n      };\n      \n      try {\n        console.log(name)\n        console.log(email)\n        console.log(content)\n        console.log(replyTo)\n         axios.post(\"/comment\", newComment);\n        console.log(\"bingo\")\n        window.location.replace(\"/post/\" + postId);\n      \n      } catch (err) {}}} className={classes.commentButton}>Add Comment</button>\n  </div>)\n \n   }\n\n\n      const classes = useStyles()\n    return(\n        <div className={classes.body}>\n        <Snackbar\n        open={openError}\n        autoHideDuration={6000}\n        onClose={handleError}\n      >\n        <Alert\n          onClose={handleError}\n          severity=\"success\"\n          sx={{ width: \"100%\" }}\n        >\n\n         {error}\n        </Alert>\n      </Snackbar>\n      <div className={classes.body}>\n    \n\n        \n          <div className={classes.textBody} >\n            <h2 >{title}</h2>  {post.photo && <img className=\"writeImg\" src={PF + post.photo} alt=\"\" />}\n        <ReactMarkdown>{desc}</ReactMarkdown>\n</div>\n       \n        </div>\n\n        <div className={classes.commentSection}>\n     \n        <div >\n\n\n        <div className={classes.body} >\n        <h3>Comments</h3>\n        {comments.map(comments => {\n            if(comments.replyTo === \"new\")\n            return(\n            <div>\n \n                 <div className={classes.commentBody}>\n            <div className={classes.commentHeader}>\n            <p  className={classes.commentName}>{comments.name}</p>\n            <br/>\n            <p>{new Date(comments.createdAt).toDateString()}</p>\n\n          <Button  onClick={() => {\n            setReply(!reply)\n        \n            setReplyTo(comments._id)\n       \n             \n             }}\n             className={classes.commentName} >Reply</Button>\n            </div>\n       \n            <ReactMarkdown className={classes.commentText} >{comments.content}</ReactMarkdown>\n          \n          </div>\n      <div  >\n    <div className={classes.arrow}/>\n    <ReplyTernary commentId={comments._id}></ReplyTernary>\n\n          {replies.map(reply => {\n            if(reply.replyTo === comments._id)\n            return(<div >\n       \n              <div className={classes.replyBody}>\n              \n   \n              <div >\n              <div className={classes.commentHeader}>\n              <p  className={classes.commentName}>{reply.name}</p>\n              <br/>\n              <p>{new Date(reply.createdAt).toDateString()}</p>\n  \n           \n              </div>\n         \n              <ReactMarkdown className={classes.commentText} >{reply.content}</ReactMarkdown>\n            \n            </div>\n      \n       </div>\n  \n         </div>)\n\n         return<div/>\n            \n          }\n          \n        )}\n        \n        </div>\n          <div>\n      \n          </div>\n\n            </div>)\n            return<div/>\n        })}\n        \n        </div>\n          \n          </div>\n          \n        </div>\n     \n        <div className={classes.body} >\n    \n      <h4 >Add Comment</h4>\n         \n          <div  className={classes.addCommentBody} >\n\n        <input className={classes.inputInfo}   value={name}\n        onChange={(e) => setName(e.target.value)} type=\"text\" placeholder=\"Name\"></input>\n            <input className={classes.inputInfo}   value={email}\n            onChange={(e) => setEmail(e.target.value)} type=\"text\"  placeholder=\"Email\"></input>\n         \n            <textarea value={content}\n            onChange={(e) => setContent(e.target.value)} className={classes.textArea}  placeholder= \"Join the discussion!\"/>\n         \n            </div>\n            <button   onClick={() => handleComment()} className={classes.commentButton}>Add Comment</button>\n        </div>\n        </div>\n    )})\n\n    export default Post"]},"metadata":{},"sourceType":"module"}