{"ast":null,"code":"var _jsxFileName = \"/Users/23miec/Projects/TechInWithElla/techinwithella/src/AuthorPages/Structure/AuthorHome.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, useParams } from \"react-router-dom\";\nimport \"../../\";\nimport Edit from '@mui/icons-material/Edit';\nimport AddIcon from '@mui/icons-material/Add';\nimport IconButton from '@mui/material/IconButton';\nimport { useEffect } from \"react\";\nimport Card from '@mui/material/Card';\nimport { CardActionArea } from '@mui/material';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AuthorHome = _ref => {\n  _s();\n\n  let {\n    history\n  } = _ref;\n  const [error, setError] = useState(\"\");\n  const [author, setAuthor] = useState(false);\n  let name = \"EllaCay68\";\n  let password = \"blogforlifex\";\n  const [authorName, setAuthorName] = useState(\"\");\n  const [authorPassword, setAuthorPassword] = useState(\"\");\n\n  const login = async () => {\n    if (authorName === name) {\n      if (authorPassword === password) {\n        setAuthor(true);\n      } else {\n        setError(\"Incorrect Password\");\n      }\n    } else {\n      setError(\"Incorrect Username\");\n    }\n  };\n\n  let {\n    category\n  } = useParams();\n  const PF = \"http://localhost:5000/images/\";\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    const fetchPosts = async () => {\n      const res = await axios.get(`/posts/`);\n\n      if (category === \"All\") {\n        setFilter(res.data);\n      } else {\n        const filtered = await axios.get(`/posts/filter/${category}`);\n        setFilter(filtered.data);\n      }\n\n      console.log(res);\n      setPosts(res.data);\n    };\n\n    fetchPosts();\n  }, [category]);\n  const [filter, setFilter] = useState([]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: author ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"FilterBlogs\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"title\",\n          children: \"Author Mode3 \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: () => {\n            window.location.replace(\"/writeTechInWithElla\");\n          },\n          className: \"headerButton\",\n          children: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this)\n        }, `addButton`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"category\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"buttons\",\n          onClick: async () => {\n            setFilter(posts);\n          },\n          children: \"All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"buttons\",\n          onClick: async () => {\n            let category = \"My Experience\";\n\n            function isCategory(post) {\n              console.log(\"category\", category);\n              return post.category === category;\n            }\n\n            setFilter(posts.filter(isCategory));\n          },\n          children: \"My Experiences\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"buttons\",\n          onClick: async () => {\n            let category = \"Cool Ideas\";\n\n            function isCategory(post) {\n              console.log(\"category\", category);\n              return post.category === category;\n            }\n\n            setFilter(posts.filter(isCategory));\n          },\n          children: \"Cool Ideas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"buttons\",\n          onClick: async () => {\n            let category = \"Thoughts\";\n\n            function isCategory(post) {\n              console.log(\"category\", category);\n              return post.category === category;\n            }\n\n            setFilter(posts.filter(isCategory));\n          },\n          children: \"Thoughts?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 2\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Blogs\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid\",\n          children: filter.map(blogPosts => /*#__PURE__*/_jsxDEV(Card, {\n            className: \"card\",\n            onClick: () => {\n              window.location.replace(\"/post/\" + blogPosts._id);\n            },\n            children: /*#__PURE__*/_jsxDEV(CardActionArea, {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text\",\n                id: \"postTitle\",\n                children: blogPosts.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text\",\n                id: \"postSubtitle\",\n                children: new Date(blogPosts.createdAt).toDateString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 5\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"image\",\n                src: PF + blogPosts.photo,\n                alt: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 3\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"edit\",\n                onClick: () => {\n                  window.location.replace(\"/editpost/\" + blogPosts._id);\n                },\n                children: /*#__PURE__*/_jsxDEV(Edit, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 194,\n                  columnNumber: 2\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 2\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 5\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 5\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 1\n        }, this)\n      }, \"Blogs\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 2\n      }, this)]\n    }, \"Blogs\", true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Username\",\n        autoFocus: true,\n        value: authorName,\n        onChange: e => setAuthorName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        autoFocus: true,\n        value: authorPassword,\n        onChange: e => setAuthorPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          login();\n        },\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 14\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 7\n  }, this);\n};\n\n_s(AuthorHome, \"P17WwmS87Iit0FTk/Hn0caARgHk=\", false, function () {\n  return [useParams];\n});\n\n_c = AuthorHome;\nexport default AuthorHome;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthorHome\");","map":{"version":3,"sources":["/Users/23miec/Projects/TechInWithElla/techinwithella/src/AuthorPages/Structure/AuthorHome.js"],"names":["React","useState","BrowserRouter","Router","useParams","Edit","AddIcon","IconButton","useEffect","Card","CardActionArea","axios","AuthorHome","history","error","setError","author","setAuthor","name","password","authorName","setAuthorName","authorPassword","setAuthorPassword","login","category","PF","posts","setPosts","fetchPosts","res","get","setFilter","data","filtered","console","log","filter","window","location","replace","isCategory","post","map","blogPosts","_id","title","Date","createdAt","toDateString","photo","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { BrowserRouter as Router, useParams } from \"react-router-dom\";\nimport \"../../\"\nimport Edit from '@mui/icons-material/Edit';\nimport AddIcon from '@mui/icons-material/Add';\nimport IconButton from '@mui/material/IconButton';\n\n   import { useEffect } from \"react\";\n \n   import Card from '@mui/material/Card';\n\n   import { CardActionArea } from '@mui/material';\n\n   import axios from \"axios\"\n\n   \nconst AuthorHome = (({ history }) => {\n  \n\n  const [error, setError] = useState(\"\") \n    const [author, setAuthor] = useState(false) \n\n  let name = \"EllaCay68\"\n  let password =\"blogforlifex\"\n    const [authorName, setAuthorName] = useState(\"\") \n const [authorPassword, setAuthorPassword] = useState(\"\") \n\n         \n  const login = async () => {\n\n  if (authorName === name) {\n\n       if (authorPassword === password) {\n      setAuthor(true)\n       }\n       else {\n         \n    setError(\"Incorrect Password\")\n  \n    }\n    \n  }\n  else {\n    setError(\"Incorrect Username\")\n  }\n \n    \n     \n};\n  \n  \n    let { category } =\n    useParams();\n  \n \n    const PF = \"http://localhost:5000/images/\";\n    const [posts, setPosts] = useState([]);\n\n\n\n    useEffect(() => {\n\n                  \n        const fetchPosts = async () => {\n            const res = await axios.get(`/posts/`);\n            if(category===\"All\"){\n                setFilter(res.data)\n\n            }else{\n                const filtered = await axios.get(`/posts/filter/${category}`);\n                setFilter(filtered.data)\n            }\n         \n         console.log(res)\n         setPosts(res.data)\n   \n    \n        };\n\n\n \n\n      \n           fetchPosts();\n      \n        },\n[category]);\n\n  \n\n      const [filter, setFilter] = useState([]);\n\n      \n  \n\n\n  return (\n  \n      <div>\n        {author?(\n        \n        <div className=\"FilterBlogs\" key=\"Blogs\">\n\n<div className=\"header\"  >\n<p className=\"title\"  >Author Mode3 </p>\n\n\n      <IconButton onClick={() => {\n   \n        window.location.replace(\"/writeTechInWithElla\")\n    \n    }}\n            key={`addButton`}\n         \n            className=\"headerButton\"\n          >\n            <AddIcon></AddIcon>\n          </IconButton>\n          </div>\n\n<div className=\"category\" >\n<button  className=\"buttons\" onClick={async() => {\n\n\n\n          \n            setFilter(posts)\n\n}} >All</button>\n\n<button  className=\"buttons\" onClick={async() => {\n    let category = \"My Experience\"\n    function isCategory(post) {\n        console.log(\"category\", category)\n                return post.category === category\n            \n              }\n\n\n            \n              setFilter(posts.filter(isCategory))\n\n}} >My Experiences</button>\n<button   className=\"buttons\"onClick={async() => {\n    let category = \"Cool Ideas\"\n    function isCategory(post) {\n        console.log(\"category\", category)\n                return post.category === category\n            \n              }\n\n\n              setFilter(posts.filter(isCategory))\n\n \n }} >Cool Ideas</button>\n <button   className=\"buttons\" onClick={async () => {\n    let category = \"Thoughts\"\n    function isCategory(post) {\n        console.log(\"category\", category)\n                return post.category === category\n            \n              }\n\n\n              setFilter(posts.filter(isCategory))\n\n }} >Thoughts?</button>\n </div>\n <div className=\"Blogs\" key=\"Blogs\">\n\n<div className='grid'>\n\n  {filter.map((blogPosts) => (\n\n    <Card \n    className=\"card\"\n    onClick={() => {\n   \n      window.location.replace(\"/post/\" + blogPosts._id);\n  \n  }}\n>\n    <CardActionArea>\n        <p    className=\"text\" id=\"postTitle\" >{blogPosts.title}</p>\n    <p className=\"text\" id=\"postSubtitle\" >{new Date(blogPosts.createdAt).toDateString()}</p>\n  <img className=\"image\" src={PF + blogPosts.photo} alt=\"\" />\n\n <button   className=\"edit\"  onClick={() => {\n   \n    window.location.replace(\"/editpost/\" + blogPosts._id);\n\n}}\n><Edit></Edit></button>\n    </CardActionArea>\n  </Card>\n\n\n))}\n\n</div>\n  \n  </div>\n</div>\n        ) : (<div>\n            \n           \n            <input\n              type=\"text\"\n              placeholder=\"Username\"\n  \n              autoFocus={true}\n              value={authorName}\n              onChange={e=>setAuthorName(e.target.value)}\n            />\n                <input\n              type=\"password\"\n              placeholder=\"Password\"\n          \n              autoFocus={true}\n              value={authorPassword}\n              onChange={e=>setAuthorPassword(e.target.value)}\n            />\n            <button \n      onClick={() => {\n   \n    login()\n    \n              }} >Login</button>\n            <p>{error}</p>\n\n</div>)}\n</div>\n\n    )\n})\n\nexport default AuthorHome"]},"metadata":{},"sourceType":"module"}