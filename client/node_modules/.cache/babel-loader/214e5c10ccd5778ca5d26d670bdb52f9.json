{"ast":null,"code":"var _jsxFileName = \"/Users/23miec/Projects/TechInWithElla/techinwithella/src/MainPages/Post.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport ReactMarkdown from \"react-markdown\";\nimport MuiAlert from \"@mui/material/Alert\";\nimport { BrowserRouter as Router, useParams } from \"react-router-dom\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport { set } from \"@firebase/database\";\nimport FavoriteIcon from '@mui/icons-material/Favorite';\nimport FavoriteBorderIcon from '@mui/icons-material/FavoriteBorder';\nimport axios from \"axios\";\nimport AddIcon from '@mui/icons-material/Add';\nimport IconButton from '@mui/material/IconButton';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Button } from \"@material-ui/core\";\nimport Divider from '@mui/material/Divider';\nimport ArrowForwardIcon from '@mui/icons-material/ArrowForward';\nimport { styled } from '@mui/material/styles';\nimport MuiGrid from '@mui/material/Grid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Grid = styled(MuiGrid)(_ref => {\n  let {\n    theme\n  } = _ref;\n  return {\n    width: '100%',\n    ...theme.typography.body2,\n    '& [role=\"separator\"]': {\n      margin: theme.spacing(0, 2)\n    }\n  };\n});\n\nconst Post = () => {\n  _s();\n\n  let {\n    id\n  } = useParams();\n  const [post, setPost] = React.useState([]);\n  const [title, setTitle] = useState(\"\");\n  const [desc, setDesc] = useState(\"\");\n  const [postId, setPostId] = React.useState(\"\");\n  useEffect(() => {\n    const getPost = async () => {\n      const posts = await axios.get(\"/posts/\" + id);\n      setPost(posts.data);\n      setTitle(posts.data.title);\n      setDesc(posts.data.desc);\n      setPostId(posts.data._id);\n      const comments = await axios.get(`/comment/${posts.data._id}`);\n      console.log(comments);\n      setComments(comments.data);\n    };\n\n    getPost();\n  }, [id]);\n  const [openError, setOpenError] = React.useState(false);\n  const [error, setError] = React.useState(\"\");\n\n  const handleError = () => {\n    setOpenError(!openError);\n  };\n\n  const Alert = /*#__PURE__*/React.forwardRef(function Alert(props, ref) {\n    return /*#__PURE__*/_jsxDEV(MuiAlert, {\n      elevation: 6,\n      ref: ref,\n      variant: \"filled\",\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 16\n    }, this);\n  });\n  const PF = \"http://localhost:5000/images/\";\n  const useStyles = makeStyles(theme => ({\n    writeImg: {\n      width: \"100%\",\n      height: \"250px\",\n      borderRadius: \"10px\",\n      objectFit: \"cover\",\n      marginTop: \"2%\"\n    },\n    body: {\n      width: \"80%\",\n      marginLeft: \"5%\"\n    },\n    markdown: {\n      width: \"60vw\",\n      margin: '1px'\n    },\n    commentHeader: {\n      display: 'flex',\n      flexDirection: \"row\",\n      backgroundColor: \"#d6d6d4\",\n      width: \"100%\"\n    },\n    commentBody: {\n      margin: '1px',\n      borderStyle: \"solid\",\n      borderColor: \"#d6d6d4\",\n      borderRadius: \"15px\",\n      width: \"100%\"\n    },\n    replyBody: {\n      marginLeft: '5%',\n      marginTop: \"10px\",\n      marginBottom: \"10px\",\n      borderStyle: \"solid\",\n      borderColor: \"#d6d6d4\",\n      borderRadius: \"15px\",\n      width: \"95%\"\n    },\n    line: {\n      borderLeft: \"solid\"\n    },\n    addBody: {\n      margin: '1px',\n      width: \"100%\"\n    },\n    addCommentBody: {\n      flexDirection: \"row\",\n      margin: '1px'\n    },\n    addCommentButton: {\n      backgroundColor: \"#2195ed\"\n    },\n    textArea: {\n      margin: '1px',\n      width: \"100%\"\n    },\n    commentSection: {\n      display: 'flex',\n      flexDirection: \"column\",\n      width: \"100%\"\n    },\n    commentText: {\n      margin: \"1%\"\n    },\n    commentName: {\n      color: \"#2195ed\",\n      marginLeft: \"1%\",\n      marginRight: \"2%\"\n    },\n    commentWrite: {\n      width: \"50%\"\n    },\n    arrow: {\n      borderLeft: \"Solid\",\n      borderWidth: \"1px\"\n    }\n  }));\n  const [comments, setComments] = useState([]);\n  const [replies, setReplies] = useState([\"hey\", \"2\"]);\n  const [reply, setReply] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [content, setContent] = useState(null);\n\n  const handleSubmit = async e => {\n    const newComment = {\n      name,\n      email,\n      postId,\n      content\n    };\n\n    try {\n      console.log(name);\n      console.log(email);\n      console.log(content);\n      await axios.post(\"/comment\", newComment);\n      console.log(\"bingo\");\n      window.location.replace(\"/post/\" + postId);\n    } catch (err) {}\n  };\n\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.body,\n    children: [/*#__PURE__*/_jsxDEV(Snackbar, {\n      open: openError,\n      autoHideDuration: 6000,\n      onClose: handleError,\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: handleError,\n        severity: \"success\",\n        sx: {\n          width: \"100%\"\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.body,\n      children: [post.photo && /*#__PURE__*/_jsxDEV(\"img\", {\n        className: classes.writeImg,\n        src: PF + post.photo,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n        className: classes.markdown,\n        children: desc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.commentSection,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.body,\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Comments\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 9\n          }, this), comments.map(comments => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.commentBody,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.commentHeader,\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: classes.commentName,\n                  children: comments.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 280,\n                  columnNumber: 13\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 281,\n                  columnNumber: 13\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: new Date(comments.createdAt).toDateString()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 282,\n                  columnNumber: 13\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  onClick: () => {\n                    setReply(comments._id);\n                  },\n                  className: classes.commentName,\n                  children: \"Reply\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 284,\n                  columnNumber: 11\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n                className: classes.commentText,\n                children: comments.content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 18\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.arrow\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 295,\n                columnNumber: 5\n              }, this), replies.map(comments => /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: classes.replyBody,\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: classes.commentHeader,\n                    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                      className: classes.commentName,\n                      children: \"Ella\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 303,\n                      columnNumber: 13\n                    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 304,\n                      columnNumber: 13\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: new Date(comments.createdAt).toDateString()\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 305,\n                      columnNumber: 13\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 302,\n                    columnNumber: 13\n                  }, this), /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n                    className: classes.commentText,\n                    children: \"Test\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 311,\n                    columnNumber: 13\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 300,\n                  columnNumber: 18\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 315,\n                  columnNumber: 11\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 13\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 13\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.body,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.addCommentBody,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Add Comment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 2\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: classes.inputInfo,\n            onChange: e => setName(e.target.value),\n            placeholder: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: classes.inputInfo,\n            onChange: e => setEmail(e.target.value),\n            placeholder: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textArea\", {\n            className: classes.textArea,\n            onChange: e => setContent(e.target.value),\n            placeholder: \"Join the discussion!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleSubmit(),\n          className: classes.commentButton,\n          children: \"Add Comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 244,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Post, \"bZ5zrwyB2aK1hh+jMMc4WFhyFks=\", true, function () {\n  return [useParams];\n});\n\n_c = Post;\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["/Users/23miec/Projects/TechInWithElla/techinwithella/src/MainPages/Post.js"],"names":["React","useState","useEffect","ReactMarkdown","MuiAlert","BrowserRouter","Router","useParams","Snackbar","set","FavoriteIcon","FavoriteBorderIcon","axios","AddIcon","IconButton","makeStyles","Button","Divider","ArrowForwardIcon","styled","MuiGrid","Grid","theme","width","typography","body2","margin","spacing","Post","id","post","setPost","title","setTitle","desc","setDesc","postId","setPostId","getPost","posts","get","data","_id","comments","console","log","setComments","openError","setOpenError","error","setError","handleError","Alert","forwardRef","props","ref","PF","useStyles","writeImg","height","borderRadius","objectFit","marginTop","body","marginLeft","markdown","commentHeader","display","flexDirection","backgroundColor","commentBody","borderStyle","borderColor","replyBody","marginBottom","line","borderLeft","addBody","addCommentBody","addCommentButton","textArea","commentSection","commentText","commentName","color","marginRight","commentWrite","arrow","borderWidth","replies","setReplies","reply","setReply","name","setName","email","setEmail","content","setContent","handleSubmit","e","newComment","window","location","replace","err","classes","photo","map","Date","createdAt","toDateString","inputInfo","target","value","commentButton"],"mappings":"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","sourcesContent":["\nimport React, { useState, useEffect } from 'react';\nimport ReactMarkdown from \"react-markdown\";\nimport MuiAlert from \"@mui/material/Alert\";\nimport { BrowserRouter as Router, useParams } from \"react-router-dom\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport { set } from \"@firebase/database\";\nimport FavoriteIcon from '@mui/icons-material/Favorite';\nimport FavoriteBorderIcon from '@mui/icons-material/FavoriteBorder';\nimport axios from \"axios\"\nimport AddIcon from '@mui/icons-material/Add';\nimport IconButton from '@mui/material/IconButton'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Button } from \"@material-ui/core\";\nimport Divider from '@mui/material/Divider';\nimport ArrowForwardIcon from '@mui/icons-material/ArrowForward';\nimport { styled } from '@mui/material/styles';\nimport MuiGrid from '@mui/material/Grid';\n\n\nconst Grid = styled(MuiGrid)(({ theme }) => ({\n  width: '100%',\n  ...theme.typography.body2,\n  '& [role=\"separator\"]': {\n    margin: theme.spacing(0, 2),\n  },\n}));\n\nconst Post = (()=>{\n\n    \n  let { id } =\n  useParams();\n\n\n  const [post, setPost] = React.useState([]);\n  const [title, setTitle] = useState(\"\");\n  const [desc, setDesc] = useState(\"\");\n  const [postId, setPostId] = React.useState(\"\");\n  useEffect(() => {\n    const getPost = async () => {\n      const posts = await axios.get(\"/posts/\" + id);\n      setPost(posts.data);\n      setTitle(posts.data.title);\n      setDesc(posts.data.desc);\n      setPostId(posts.data._id)\n   \n        \n      const comments = await axios.get(`/comment/${posts.data._id}`);\n      console.log(comments)\n      setComments(comments.data)\n    \n     };\n\n    getPost();\n  }, [id]);\n\n\n    \n\n\n\n\n\n\n\n    const [openError, setOpenError] = React.useState(false);\n\n    const [error, setError] = React.useState(\"\");\n      const handleError = () => {\n        setOpenError(!openError);\n      };\n  \n    const Alert = React.forwardRef(function Alert(props, ref) {\n        return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\n      });\n\n      const PF = \"http://localhost:5000/images/\";\n   \n\n      const useStyles = makeStyles((theme) => ({\n\n        writeImg:{\n          \n          width: \"100%\",\n          height: \"250px\",         \n           borderRadius: \"10px\",\n          objectFit: \"cover\",\n          marginTop:\"2%\",\n        },\n        body:{\n          \n          width:\"80%\",\n          marginLeft:\"5%\",\n      \n      \n        },\n        markdown:{\n          \n          width: \"60vw\",\n          margin:'1px',\n        \n      \n        },\n        commentHeader:{\n         display:'flex',\n         flexDirection:\"row\", \n     backgroundColor:\"#d6d6d4\",\n     width:\"100%\",\n        \n      \n        },\n        commentBody:{\n          \n          \n          margin:'1px',\n          borderStyle:\"solid\",\n          borderColor:\"#d6d6d4\",\n          borderRadius:\"15px\",\n          width:\"100%\",\n      \n\n        },\n        replyBody:{\n          \n          \n          marginLeft:'5%',\n          marginTop:\"10px\",   marginBottom:\"10px\",\n          borderStyle:\"solid\",\n          borderColor:\"#d6d6d4\",\n          borderRadius:\"15px\",\n          width:\"95%\",\n      \n\n        },\n\n        line:{\n          \n       borderLeft:\"solid\",\n\n\n        },\n\n        addBody:{\n          \n          \n          margin:'1px',\n      \n      \n          width:\"100%\",\n      \n      \n\n        },\n\n        addCommentBody:{\n          \n          flexDirection:\"row\", \n          margin:'1px',\n          \n \n      \n\n        },\n    addCommentButton:{\nbackgroundColor:\"#2195ed\"\n    },\n\n        textArea:{\n          \n          \n          margin:'1px',\n        \n      \n          width:\"100%\",\n      \n        },\n        commentSection:{\n          \n          display:'flex',\n          flexDirection:\"column\", \n          width:\"100%\",\n      \n        },\n        commentText:{\n          \n          margin:\"1%\",\n      \n        }\n        ,commentName:{\n          color:\"#2195ed\",\n          marginLeft: \"1%\",\n          marginRight:\"2%\",\n        }\n        ,  commentWrite:{\n          \n         width:\"50%\",\n      \n        }\n        ,  arrow:{\n         borderLeft:\"Solid\",\n         borderWidth:\"1px\",\n         }\n        \n\n        \n        \n      }))\n\n      const [comments, setComments] = useState([]);\n      const [replies, setReplies] = useState([\"hey\",\"2\"]);\n\n   \n      const [reply, setReply] = useState(\"\");\n      const [name, setName] = useState(\"\");\n      const [email, setEmail] = useState(\"\");\n      const [content, setContent] = useState(null);\n\n\n            \n      const handleSubmit = async (e) => {\n      \n \n        const newComment = {\n          name,\n          email,\n          postId,\n          content,\n        };\n        \n        try {\n          console.log(name)\n          console.log(email)\n          console.log(content)\n          await axios.post(\"/comment\", newComment);\n          console.log(\"bingo\")\n          window.location.replace(\"/post/\" + postId);\n        } catch (err) {}\n      };\n\n\n      const classes = useStyles()\n    return(\n        <div className={classes.body}>\n        <Snackbar\n        open={openError}\n        autoHideDuration={6000}\n        onClose={handleError}\n      >\n        <Alert\n          onClose={handleError}\n          severity=\"success\"\n          sx={{ width: \"100%\" }}\n        >\n\n         {error}\n        </Alert>\n      </Snackbar>\n      <div className={classes.body}>\n      {post.photo && <img className={classes.writeImg} src={PF + post.photo} alt=\"\" />}\n\n        <h2 >{title}</h2>\n       \n        <ReactMarkdown className={classes.markdown}  >{desc}</ReactMarkdown>\n  \n        </div>\n\n        <div className={classes.commentSection}>\n     \n        <div >\n\n\n        <div className={classes.body} >\n        <h3>Comments</h3>\n          {comments.map((comments) => (\n            <div>\n \n                 <div className={classes.commentBody}>\n            <div className={classes.commentHeader}>\n            <p  className={classes.commentName}>{comments.name}</p>\n            <br/>\n            <p>{new Date(comments.createdAt).toDateString()}</p>\n\n          <Button  onClick={() => {\n            setReply(comments._id)\n             \n             }}\n             className={classes.commentName} >Reply</Button>\n            </div>\n       \n            <ReactMarkdown className={classes.commentText} >{comments.content}</ReactMarkdown>\n          \n          </div>\n      <div  >\n    <div className={classes.arrow}/>\n    \n          {replies.map((comments) => (\n            <div >\n       \n                 <div className={classes.replyBody}>\n                 \n            <div className={classes.commentHeader}>\n            <p  className={classes.commentName}>{\"Ella\"}</p>\n            <br/>\n            <p>{new Date(comments.createdAt).toDateString()}</p>\n       \n\n          \n            </div>\n       \n            <ReactMarkdown className={classes.commentText} >{\"Test\"}</ReactMarkdown>\n            \n          </div>\n      \n          <div>\n         \n          </div>\n\n            </div>\n        ))}\n        \n        </div>\n          <div>\n      \n          </div>\n\n            </div>\n        ))}\n        \n        </div>\n          \n          </div>\n          <div className={classes.body} >\n    \n   \n          <div  className={classes.addCommentBody} >\n <p>Add Comment</p>\n        <input className={classes.inputInfo}    onChange={(e) => setName(e.target.value)} placeholder=\"Name\"></input>\n            <input className={classes.inputInfo}  onChange={(e) => setEmail(e.target.value)}  placeholder=\"Email\"></input>\n         \n            <textArea  className={classes.textArea}  onChange={(e) => setContent(e.target.value)}  placeholder= \"Join the discussion!\"></textArea>\n         \n            </div>\n            <button   onClick={() => handleSubmit()} className={classes.commentButton}>Add Comment</button>\n        </div>\n        </div>\n        \n        </div>\n    )})\n\n    export default Post"]},"metadata":{},"sourceType":"module"}