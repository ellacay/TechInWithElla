{"ast":null,"code":"var _jsxFileName = \"/Users/23miec/Projects/techinwithella/src/MainPages/UploadPost.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport { storage } from '../index';\nimport firebase from 'firebase';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Container from '@material-ui/core/Container';\nimport TextField from '@mui/material/TextField';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({}));\n\nconst UploadImage = () => {\n  _s();\n\n  const [title, setTitle] = React.useState(\"\");\n  const [date, setDate] = React.useState(\"\");\n  const [readTime, setReadTime] = React.useState(\"\");\n  const [author, setAuthor] = React.useState(\"\");\n  const [paragraphs, setParagraphs] = React.useState(\"\");\n  const [image1, setImage1] = React.useState(\"\");\n  const [image2, setImage2] = React.useState(\"\");\n  const [image1Alt, setImage1Alt] = React.useState(\"\");\n  const [image2Alt, setImage2Alt] = React.useState(\"\");\n  const classes = useStyles();\n  const allInputs = {\n    imgUrl: ''\n  };\n  const [imageAsFile, setImageAsFile] = useState('');\n  const [imageAsUrl, setImageAsUrl] = useState(allInputs);\n  console.log(imageAsFile);\n\n  const handleImageAsFile = e => {\n    const image = e.target.files[0];\n    setImageAsFile(imageFile => image);\n  };\n\n  const handleFireBaseUpload = e => {\n    e.preventDefault();\n    console.log('start of upload'); // async magic goes here...\n\n    if (imageAsFile === '') {\n      console.error(`not an image, the image file is a ${typeof imageAsFile}`);\n    }\n\n    const uploadTask = storage.ref(`/images/${image1Alt}`).put(imageAsFile); //initiates the firebase side uploading\n\n    uploadTask.on('state_changed', snapShot => {\n      //takes a snap shot of the process as it is happening\n      console.log(snapShot);\n    }, err => {\n      //catches the errors\n      console.log(err);\n    }, () => {\n      // gets the functions from storage refences the image storage in firebase by the children\n      // gets the download url then sets the image from firebase as the value for the imgUrl key:\n      storage.ref('images').child(imageAsFile).getDownloadURL().then(fireBaseUrl => {\n        setImageAsUrl(prevObject => ({ ...prevObject,\n          imgUrl: fireBaseUrl\n        }));\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.divWrap,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        id: \"outlined-basic\",\n        label: \"Outlined\",\n        variant: \"outlined\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"outlined-basic\",\n        label: \"Outlined\",\n        variant: \"outlined\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"outlined-basic\",\n        label: \"Outlined\",\n        variant: \"outlined\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"outlined-basic\",\n        label: \"Outlined\",\n        variant: \"outlined\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: '10px 0 0'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleImageAsFile\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.size,\n        style: {\n          margin: '0 0 10px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: imageAsUrl.imgUrl,\n          style: {\n            maxWidth: '300px'\n          },\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 25\n      }, this), \"onSubmit=\", handleFireBaseUpload, \"style=\", {\n        margin: '10px 0'\n      }, \">\", /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.buttonStyle,\n        onClick: () => {},\n        children: \"upload to firebase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UploadImage, \"eFdDIRVofe1NZIjEmxBj3U0YsNA=\", false, function () {\n  return [useStyles];\n});\n\n_c = UploadImage;\nexport default UploadImage;\n\nvar _c;\n\n$RefreshReg$(_c, \"UploadImage\");","map":{"version":3,"sources":["/Users/23miec/Projects/techinwithella/src/MainPages/UploadPost.js"],"names":["React","useState","Button","storage","firebase","makeStyles","Checkbox","Select","InputLabel","MenuItem","Container","TextField","useStyles","theme","UploadImage","title","setTitle","date","setDate","readTime","setReadTime","author","setAuthor","paragraphs","setParagraphs","image1","setImage1","image2","setImage2","image1Alt","setImage1Alt","image2Alt","setImage2Alt","classes","allInputs","imgUrl","imageAsFile","setImageAsFile","imageAsUrl","setImageAsUrl","console","log","handleImageAsFile","e","image","target","files","imageFile","handleFireBaseUpload","preventDefault","error","uploadTask","ref","put","on","snapShot","err","child","getDownloadURL","then","fireBaseUrl","prevObject","divWrap","margin","size","maxWidth","buttonStyle"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport Button from '@material-ui/core/Button'\nimport { storage } from '../index'\nimport firebase from 'firebase'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport Select from '@material-ui/core/Select'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport Container from '@material-ui/core/Container'\n\nimport TextField from '@mui/material/TextField';\n\nconst useStyles = makeStyles((theme) => ({\n\n}))\nconst UploadImage = () => {\n  const [title, setTitle] = React.useState(\"\");\n  const [date, setDate] = React.useState(\"\");\n  const [readTime, setReadTime] = React.useState(\"\");\n  const [author, setAuthor] = React.useState(\"\");\n  const [paragraphs, setParagraphs] = React.useState(\"\");\n  const [image1, setImage1] = React.useState(\"\");\n  const [image2, setImage2] = React.useState(\"\");\n  const [image1Alt, setImage1Alt] = React.useState(\"\");\n  const [image2Alt, setImage2Alt] = React.useState(\"\");\n\n\n\n    const classes = useStyles()\n    const allInputs = { imgUrl: '' }\n    const [imageAsFile, setImageAsFile] = useState('')\n    const [imageAsUrl, setImageAsUrl] = useState(allInputs)\n\n \n  \n    console.log(imageAsFile)\n    const handleImageAsFile = (e) => {\n        const image = e.target.files[0]\n        setImageAsFile((imageFile) => image)\n    }\n\n    const handleFireBaseUpload = (e) => {\n        e.preventDefault()\n        console.log('start of upload')\n        // async magic goes here...\n        if (imageAsFile === '') {\n            console.error(\n                `not an image, the image file is a ${typeof imageAsFile}`\n            )\n        }\n\n        const uploadTask = storage.ref(`/images/${image1Alt}`).put(imageAsFile)\n        //initiates the firebase side uploading\n        uploadTask.on(\n            'state_changed',\n            (snapShot) => {\n                //takes a snap shot of the process as it is happening\n                console.log(snapShot)\n            },\n            (err) => {\n                //catches the errors\n                console.log(err)\n            },\n            () => {\n                // gets the functions from storage refences the image storage in firebase by the children\n                // gets the download url then sets the image from firebase as the value for the imgUrl key:\n                storage\n                    .ref('images')\n                    .child(imageAsFile)\n                    .getDownloadURL()\n                    .then((fireBaseUrl) => {\n                        setImageAsUrl((prevObject) => ({\n                            ...prevObject,\n                            imgUrl: fireBaseUrl,\n                        }))\n                    })\n            }\n        )\n    }\n\n\n\n\n    return (\n        <div className=\"App\">\n            <div className={classes.divWrap}>\n            <TextField id=\"outlined-basic\" label=\"Outlined\" variant=\"outlined\" />\n            <TextField id=\"outlined-basic\" label=\"Outlined\" variant=\"outlined\" />\n            <TextField id=\"outlined-basic\" label=\"Outlined\" variant=\"outlined\" />\n            <TextField id=\"outlined-basic\" label=\"Outlined\" variant=\"outlined\" />\n\n                      \n                    </div>\n\n                    <div style={{ margin: '10px 0 0' }}>\n                        <input type=\"file\" onChange={handleImageAsFile} />\n                        <div\n                            className={classes.size}\n                            style={{ margin: '0 0 10px' }}\n                        >\n                            <img\n                                src={imageAsUrl.imgUrl}\n                                style={{ maxWidth: '300px' }}\n                                alt=\"\"\n                            />\n                        </div>\n            \n                    \n                    \n                        onSubmit={handleFireBaseUpload}\n                        style={{ margin: '10px 0' }}\n                    >\n                        <button\n                            className={classes.buttonStyle}\n                            onClick={() => {\n                             \n                               \n                            }}\n                        >\n                            upload to firebase\n                        </button>\n               \n                </div>\n         \n        </div>\n    )\n}\n\nexport default UploadImage\n"]},"metadata":{},"sourceType":"module"}